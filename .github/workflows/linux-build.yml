name: Build and Release (Linux)

on:
  push:
    branches: 
      - linux-release-not
    tags: [ "*" ]
    paths:
      - 'MarkViewDesktop/**'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:

      # 1) Checkout do repositório
      - name: Check out repository
        uses: actions/checkout@v4

      # 2) Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # 3) Instalar dependências
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MarkViewDesktop/requirements.txt
          pip install pyinstaller

      # 4) Build com PyInstaller
      - name: Build with PyInstaller
        run: |
          # pyinstaller --onefile MarkViewDesktop/main.py --name markview
          pyinstaller --noconsole --name DocViewer \
            --icon="MarkViewDesktop/icons_svg/doc_icon.ico" \
            --add-data "MarkViewDesktop/ui_docV.py:." \
            --add-data "MarkViewDesktop/icons_svg/*:icons" \
            MarkViewDesktop/main.py 
          ls dist  
      - name: Compressing files
        run: |
            tar -czvf dist/markview-linux.tar.gz dist/DocViewer
            ls dist
      # 5) Criar ou atualizar uma Release no GitHub
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v0.1.1
          release_name: "Linux Release v0.1.1"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 6) Fazer upload do binário gerado na release
      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/markview-linux.tar.gz
          asset_name: "docviewer-linux"
          asset_content_type: application/octet-stream
        env:
          # Mesmo token de cima
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
